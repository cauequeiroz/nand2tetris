// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address, a=address1load, b=address2load, c=address3load, d=address4load, e=address5load, f=address6load, g=address7load, h=address8load);

    Register (in=in, load=address1load, out=address1);
    Register (in=in, load=address2load, out=address2);
    Register (in=in, load=address3load, out=address3);
    Register (in=in, load=address4load, out=address4);
    Register (in=in, load=address5load, out=address5);
    Register (in=in, load=address6load, out=address6);
    Register (in=in, load=address7load, out=address7);
    Register (in=in, load=address8load, out=address8);

    Mux8Way16 (a=address1, b=address2, c=address3, d=address4, e=address5, f=address6, g=address7, h=address8, sel=address, out=out);
}